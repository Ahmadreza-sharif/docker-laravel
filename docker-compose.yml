version: '3'networks:  laravel-app:    driver: bridgeservices:  # Core Service  app:    tty: true    container_name: ${PROJECT_NAME}_project    build:      args:        app_env : local      context: ./code      dockerfile: Dockerfile    image: core_application    environment:      APP_NAME : ${PROJECT_NAME}      DB_CONNECTION: ${DB_CONNECTION}      DB_HOST: ${POSTGRES_HOST}      DB_PORT: ${POSTGRES_PORT}      DB_DATABASE: ${POSTGRES_DB}      DB_USERNAME: ${POSTGRES_USER}      DB_PASSWORD: ${POSTGRES_PASSWORD}      APP_ENV: local      APP_DEBUG: true    volumes:      - ./code:/var/www:delegated    ports:      - "8000:9000"    networks:      - laravel-app    restart: unless-stopped  # Postgresql Service  postgresql:    container_name: ${PROJECT_NAME}_db    build:      context: ./.docker/postgresql      dockerfile: Dockerfile    restart: unless-stopped    hostname: ${POSTGRES_HOST}    environment:      POSTGRES_USER : ${POSTGRES_USER}      POSTGRES_PASSWORD : ${POSTGRES_PASSWORD}      POSTGRES_DB : ${POSTGRES_DB}      POSTGRES_PORT : ${POSTGRES_PORT}    ports:      - ${POSTGRES_PORT:-5432}:5432    networks:      - laravel-app    volumes:      - postgresql:/var/lib/postgresql/data  # Adminer Service  adminer:    image: adminer    container_name: ${PROJECT_NAME}_adminer    depends_on:      - postgresql    ports:      - ${ADMINER_PORT:-8080}:8080    networks:      - laravel-app    restart: unless-stopped  # Nginx Service  web-server:    image: nginx    container_name: ${PROJECT_NAME}_server    restart: no    environment:      - DOMAIN_NAME=${DOMAIN_NAME}    ports:      - "80:80"      - "443:443"    volumes:      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf      - ./code:/var/www    depends_on:      - app    networks:      - laravel-appvolumes:  postgresql:    driver: local    name: ${PROJECT_NAME}_postgresql#    build:#      context: ./.docker/nginx#      dockerfile: Dockerfile